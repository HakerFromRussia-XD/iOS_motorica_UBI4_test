"app_name" = "Motorica Start";
"helloWorld" = "open";
"helloWorld2" = "close";
"helloWorld3" = "stop";
"gesture1" = "gesture 1";
"gesture2" = "gesture 2";
"gesture3" = "gesture 3";
"off_update" = "off schedules";
"on_update" = "on schedules";
"gesture4" = "parting position";
"scan_again" = "SCANNING AGAIN";
"activity_scan_paired_text" = "Connected devices:";
"bluetooth_scanning" = "SCANNING…";
"bluetooth_scan_finished" = "";
"bluetooth_pairing" = "connection…";
"bluetooth_paired" = "Device is connected.";
"bluetooth_unpaired" = "Device is disconnected.";
"bluetooth_connected" = "Device is connected.";
"bluetooth_connecting" = "Connection…";
"bluetooth_disconnected" = "Device is not connected.";
"bluetooth_connect_in_3sec" = "It was not succeeded to be connected…";
"bluetooth_turning_on" = "Bluetooth turned off…";
"title_home" = "Gestures";
"title_dashboard" = "Sensors";
"valueCH1" = "TextView";
"ch1" = "CH1:";
"_100" = "100";
"ch1_on" = "CH1 on:";
"ch1_off" = "CH1 off:";
"mv" = "mV";
"mv2" = "mV";
"mv3" = "mV";
"_1250" = "1250";
"_2500" = "2500";
"state_view" = "lolol";
"title_activity_gripper_settings" = "GripperSettings";
"action_Trigger0" = "service menu";
"action_Trigger1" = "classical";
"action_Trigger2" = "trigger";
"action_Trigger3" = "trigger inverted";
"action_Trigger4" = "";
"action_Trigger5" = "";
"action_Trigger6" = "";
"action_Trigger7" = "";
"action_Trigger8" = "classical inverted";
"appbar_scrolling_view_behavior" = "com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior";
"lesson_eight_error_could_not_create_vbo" = "Could not create vertex buffer object: %s";
"lesson_eight_error_unknown" = "Unknown error: %s";
"hello_blank_fragment" = "Hello blank fragment";
"illumination" = "Illumination";
"closing" = "closing";
"opening" = "opening";
"battery_power" = "Battery power:";
"compressive_force" = "Compressive force";
"blocking" = "Blocking";
"roughness_of_sensors" = "Roughness of sensors";
"I_real" = "I real:";
"I_max" = "I max:";
"mA" = "mA";
"inverting" = "Inverting";
"internal_ADC" = "Internal ADC";
"save" = "save";
"single_channel_by_sensor_1" = "single channel by sensor 1";
"single_channel_by_sensor_2" = "single channel by sensor 2";
"advanced_settings" = "Advanced settings";
"ok" = "OK";
"cancel" = "отмена";
"password" = "password";
"calibration" = "Calibration:";
"number_of_channel" = "Number of channel:";
"speed" = "Speed";
"angle" = "Angle";
"input_address" = "Input address";
"input_temp" = "Input temp";
"current_control_data" = "Current control data";
"set" = "set";
"open" = "open";
"stop" = "stop";
"close" = "close";
"current_control_timeout" = "Current control timeout";
"x100_ms" = "x100 ms";
"current_control" = "Current control";
"currents" = "currents";
"ete_calib" = "EtE   calib";
"eeprom_save" = "EEPROM save";
"angle_fix" = "angle fix";
"input_open_angle" = "Input open angle";
"input_close_angle" = "Input close angle";
"input_wide_angle" = "Input wide angle";
"magnet_invert" = "Magnet invert";
"revers_motor" = "Revers motor";
"zero_crossing" = "Zero crossing";
"speed_with_space" = "\"speed: \"";
"use_gesture" = "use gesture";
"leave" = "Exit?";
"no" = "no";
"not_the_right_password" = "password not right";
"select_channel" = "\"select channel \"";
"admission_of_inquiry_of_updating" = "admission of inquiry of updating";
"click_to_edit_start_and_end_states" = "Click to edit start and end states";
"control_of_an_open_state" = "Control of an open state";
"control_of_the_closed_state" = "Control of the closed state";
"allows_you_to_set_the_position_of_the_maximum_open_state" = "Allows you to set the position of the maximum open state";
"allows_you_to_set_the_position_of_the_maximum_closed_state" = "Allows you to set the position of the maximum closed state";
"connection_is_absent" = "connection is absent";
"off_schedules" = "off schedules";
"on_schedules" = "on schedules";
"magic_checkbox" = "Magic checkbox";
"speed_increment" = "speed increment";
"disable_angel_control" = "disable angel control";
"gesture_1_btn" = "gesture №1";
"gesture_2_btn" = "gesture №2";
"gesture_3_btn" = "gesture №3";
"gesture_4_btn" = "gesture №4";
"gesture_5_btn" = "gesture №5";
"gesture_6_btn" = "gesture №6";
"gesture_7_btn" = "gesture №7";
"gesture_8_btn" = "gesture №8";
"gesture_9_btn" = "gesture №9";
"gesture_10_btn" = "gesture №10";
"gesture_11_btn" = "gesture №11";
"gesture_12_btn" = "gesture №12";
"gesture_13_btn" = "gesture №13";
"gesture_14_btn" = "gesture №14";
"gesture_15_btn" = "gesture №15";
"gesture_16_btn" = "gesture №16";
"gesture_17_btn" = "gesture №17";
"gesture_18_btn" = "gesture №18";
"gesture_19_btn" = "gesture №19";
"gesture_20_btn" = "gesture №20";
"gesture_21_btn" = "gesture №21";
"gesture_22_btn" = "gesture №22";
"gesture_23_btn" = "gesture №23";
"gesture_24_btn" = "gesture №24";
"gesture_25_btn" = "gesture №25";
"test" = "test";
"setting_up_gestures" = "setting up gestures";
"sensor_settings" = "sensor settings";
"sensor_settingss" = "Sensor settings";
"special_settings" = "Special settings";
"driver_0_00v" = "driver: 0.00v";
"driver" = "\"driver: \"";
"bms_0_00v" = "bms: 0.00v";
"bms" = "\"bms: \"";
"sens_0_00v" = "sens: 0.00v";
"sens" = "\"sens: \"";
"open_threshold" = "open threshold";
"close_threshold" = "close threshold";
"opening_sensor_sensitivity" = "opening sensor sensitivity";
"closing_sensor_sensitivity" = "closing sensor sensitivity";
"settings_blocking" = "settings blocking";
"settings_blocking_massage" = "first disable the lockout";
"waiting_for_data_transfer_from_the_prosthesis" = "waiting for data transfer from the prosthesis";
"close_btn" = "close";
"open_btn" = "open";
"swap_sensors" = "swap sensors";
"swap_button_open_close" = "swap button open/close";
"single_channel_control" = "single channel control";
"reset_to_factory_settings" = "soft reset to factory settings";
"off" = "off";
"on" = "on";
"off_sw" = "off";
"on_sw" = "on";
"dialog_pin_app_varning" = "Enter 4 digits";
"min_shutdown_current" = "min compression force";
"shutdown_current" = "compression force";
"rotation_thumb" = "rotation thumb";
"thumb" = "thumb";
"forefinger" = "forefinger";
"middle_finger" = "middle finger";
"ring_finger" = "ring finger";
"little_finger" = "little finger";
"open_state" = "open";
"close_state" = "close";
"cancel_gripper_settings" = "Cancel";
"save_gripper_settings" = "Save";
"gesture" = "Gesture ";
"hand_side" = "hand side";
"left" = "left";
"right" = "right";
"prostheses_update_ready_for_installation" = "Prostheses update";
"do_you_want_to_start_updating" = "A new version of the prostheses software is available. Do you want to install the updated firmware now?";
"updating_0" = "updating… ";
"gesture_switching_by_sensors" = "gesture switching by sensors";
"switching_mode" = "switching mode";
"time_between_peaks" = "time between peaks";
"peak_time" = "peak time";
"gesture_state" = "Gesture state:";
"finger_position" = "Rotation:";
"gps_network_not_enabled" = "Enabled geolocation is necessary to connect to the prostheses via bluetooth.";
"open_location_settings" = "enable geolocation";
"we_need_these_permissions" = "We need these permissions…";
"rotation_state_open" = "outside";
"rotation_state_close" = "inside";
"gesture_state_open" = "open state";
"delay_state" = "Setting delays";
"delay_state_open_description" = "Finger delays when moving from open to closed state";
"gesture_state_close" = "off-state";
"delay_state_close_description" = "Setting close finger delays";
"prostheses_calibrating" = "Prostheses calibrating";
"waiting" = "waiting…";
"get" = "get";
"serial" = "prosthesis serial";
"shutdown_current_1" = "shutdown current 1";
"shutdown_current_2" = "shutdown current 2";
"shutdown_current_3" = "shutdown current 3";
"shutdown_current_4" = "shutdown current 4";
"shutdown_current_5" = "shutdown current 5";
"shutdown_current_6" = "shutdown current 6";
"start_calibration" = "start calibration";
"not_calibrated_message" = "To calibrate it, go to the advanced settings.";
"not_calibrated" = "The prostheses is not calibrated";
"calibration_status" = "calibration status";
"sync_0" = "sync 0%";
"start" = "start";
"pre_status_finger" = "status finger %d: ";
"delay_finger_ms" = "%dms ";
"pre_status_0_finger" = "not calibrated";
"pre_status_1_finger" = "calibration in progress";
"pre_status_2_finger" = "there is no motor";
"pre_status_3_finger" = "there is no encoder";
"pre_status_4_finger" = "motor scrolls";
"pre_status_5_finger" = "screw pulled";
"pre_status_6_finger" = "calibrated";
"pre_status_num" = "status";
"status_finger" = "\nencoder steps: %d \ncurrent: %d mA";
"serial_number" = "set serial number";
"changing_the_finger_delay_time" = "changing the finger delay time";
"finger_delay" = "finger delay";
"_1_finger_delay" = "forefinger delay";
"_2_finger_delay" = "middle finger delay";
"_3_finger_delay" = "ring finger delay";
"_4_finger_delay" = "little finger delay";
"_5_finger_delay" = "big finger delay";
"_6_finger_delay" = "rotation delay";
"time_at_rest" = "peak length";
"recalibration_required_to_complete_prostheses_side_change" = "Recalibration required to complete prostheses side change.";
"do_you_want_to_start_calibration_now" = "Do you want to start calibration now?";
"version_app" = "Application version";
"error_code" = "Error code: %d";
"app_pin_entering_varning" = "You entered an incorrect code.";
"prostheses_blocking" = "prostheses blocking";
"hold_to_lock_time" = "hold to lock time";
"debug_screen" = "debug screen";
"scale" = "prostheses size:";
"yes" = "yes";
"the_size_of_your_prostheses" = "The size of your prostheses";
"amplitude" = "amplitude";
"one_sensor" = "one sensor";
"change_value" = "Change value";
"test_connection" = "test connection";
"communication_testing" = "Communication testing";
"communication_testing_in_progress" = "Communication testing in progress...";
"functionality_in_development" = "Functionality in development";
"unstable_connection" = "Unstable connection";
"communication_quality" = "Communication quality";
"quality_description" = "quality description";
"no_link" = "no link";
"terrible_quality" = "terrible quality";
"poor_quality" = "poor quality";
"satisfactory_quality" = "satisfactory quality";
"high_quality" = "high quality";
"excellent_quality" = "excellent quality";
"smart_connection" = "smart connection";
"disconnection_from_the_device" = "Disconnection from the device";
"are_you_sure_you_want_to_disconnect_from_your_device_and_go_to_the_scan_screen" = "Are you sure you want to disconnect from your device and go to the scan screen?";
"got_it" = "Got it";
"availible_devices" = "AVAILIBLE DEVICES";
"paired_device" = "PAIRED DEVICE";
"all_devices" = "All devices";
"prostheses" = "Prostheses";
"need_help" = "Need help?";
"help_massage_2_1_title" = "Software versions and synchronization";
"help_massage_2_2_title" = "Sensitivity control";
"help_massage_2_2_1_title" = "Fine tuning";
"help_massage_2_3_title" = "Sensor threshold";
"help_massage_2_4_title" = "Threshold control";
"help_massage_2_4_1_title" = "Control another threshold";
"help_massage_2_5_title" = "Swapping sensor positions";
"help_massage_2_6_title" = "Blocking";
"help_massage_2_7_title" = "Direct control of the prostheses";
"help_massage_2_8_title" = "Name connected device";
"help_massage_1" = "Here you can find information about the prostheses and the app.";
"help_massage_2_1" = "Parameters shows the software versions of each of the boards installed in the brush. Percentage of synchronization shows how much percentage is completed reading all parameters from the prostheses into the application.";
"help_massage_2_2" = "By dragging this slider, you can change the sensitivity level of the sensor.";
"help_massage_2_2_1" = "To change the sensitivity more accurately, press the number.";
"help_massage_2_3" = "The colors of the thresholds correspond to the colors of the signals from the sensors in the graphs. The threshold has a name and a level displayed by a number. When the threshold is crossed by the corresponding signal, the prostheses performs an opening or closing action, respectively.";
"help_massage_2_4" = "The opening sensor threshold level can be changed by touching any part of the highlighted area. You can make a long swipe for a more accurate tuning.";
"help_massage_2_4_1" = "The level of the close sensor threshold can be changed in the same way, by touching any part of the highlighted area. You can also make a long swipe for a more accurate tuning.";
"help_massage_2_5" = "The function for swapping the sensors is necessary if the signatures on the thresholds and sensitivity control sliders do not correspond to reality or the sensors in the sleeve are mixed up.";
"help_massage_2_6" = "The function is designed so that the perfectly matched settings are not spoiled by accidental pressing during the practice of controlling the prostheses.";
"help_massage_2_7" = "Does with a prosthetic what it says on it. The buttons are time sensitive.";
"help_massage_2_8" = "The name of the connected device is displayed here. If you click on it, you can disconnect from the current device and select another one.";
"setup_profiles" = "Setup profiles";
"you_can_create_your_own_settings_profile_by_saving_a_previously_created_profile_a_new_profile_is_created_by_copying_all_settings_of_the_previous_one_also_in_this_menu_you_will_be_able_to_switch_between_all_previously_created_profiles" = "You can create your own settings profile by saving a previously created profile. A new profile is created by copying all settings of the previous one. Also in this menu you will be able to switch between all previously created profiles.";
"app_control" = "CONTROLS IN THE APP";
"help" = "Help";
"setting_gestures" = "Gesture customization";
"prostheses_use" = "PROSTHESES USE";
"how_prostheses_works" = "How prostheses works";
"how_to_put_on_a_prostheses_socket" = "How to put on a prostheses socket";
"complete_set" = "Complete set";
"prostheses_charge" = "Charging the prostheses";
"prostheses_care" = "Prostheses care";
"contact_us" = "CONTACT US";
"contact_support" = "Contact support";
"what_s_included_in_the_package" = "What's included in the package?";
"hand_module" = "Hand module";
"_1_item" = "1 item";
"_2_items" = "2 items";
"battery_pack" = "Battery pack";
"power_system" = "Power system";
"prosthetic_socket" = "Prosthetic socket*";
"battery_charger_with_220v_50hz_power_supply" = "Battery charger with 220V 50Hz power supply";
"stationary_part_of_the_rotator" = "Stationary part of the rotator";
"sensor_tabs" = "Sensor tabs*";
"electromyographic_sensors_with_control_system" = "Electromyographic sensors with control system";
"specifications" = "Specifications";
"user_manual" = "User manual";
"button_with_charging_connector" = "Button with charging connector";
"pouch_for_pulling_the_prostheses_through_clothing_sleeves" = "Pouch for pulling the prostheses through clothing sleeves";
"antiseptic" = "Antiseptic*";
"how_to_put_on_a_prostheses_socket_" = "How to put on a prostheses socket?";
"the_prostheses_is_fixed_and_held_in_place_by_the_anatomical_construction_of_the_socket_and_shoulder_brace" = "The prostheses is fixed and held in place by the anatomical construction of the socket and shoulder brace.";
"important_the_prostheses_must_be_turned_off_when_you_put_it_on" = "Important! The prostheses must be turned off when you put it on";
"check_that_the_residual_limb_is_comfortably_positioned_in_the_socket_and_that_it_is_securely_fastened_once_it_is_securely_in_place_turn_on_the_prostheses" = "Check that the residual limb is comfortably positioned in the socket and that it is securely fastened. Once it is securely in place, turn on the prostheses.";
"press_the_button_for_2_seconds_to_turn_the_denture_on_or_off_as_shown_in_the_illustration" = "Press the button for 2 seconds to turn the denture on or off, as shown in the illustration.";
"control" = "Control";
"the_prostheses_is_controlled_by_alternating_tension_of_the_antagonist_muscles_flexor_extensor_the_signal_from_which_is_recorded_by_myographic_sensors_emg_sensors_fixed_in_the_inner_stump_sleeve" = "The prostheses is controlled by alternating tension of the antagonist muscles (flexor/extensor), the signal from which is recorded by myographic sensors (EMG sensors), fixed in the inner stump sleeve.";
"you_can_control_the_prostheses_using_both_or_one_myosensor_dual_channel_and_single_channel_control_respectively" = "You can control the prostheses using both or one myosensor (dual-channel and single-channel control, respectively).";
"how_it_works" = "How it works:";
"an_electric_motor_located_in_the_hand_module_brings_the_thumb_and_the_other_4_fingers_together_and_expands_them_relative_to_each_other_there_is_one_type_of_grip_gesture_in_the_prostheses_the_pinch" = "An electric motor located in the hand module brings the thumb and the other 4 fingers together and expands them relative to each other. There is one type of grip (gesture) in the prostheses - the pinch.";
"the_prostheses_has_a_passive_rotation_of_the_hand_relative_to_the_forearm" = "The prostheses has a passive rotation of the hand relative to the forearm.";
"two_myosensors_are_used_to_control_the_prostheses_dual_channel_control" = "Two myosensors are used to control the prostheses (dual channel control)";
"the_hand_has_6_independent_degrees_of_freedom_which_means_that_each_finger_is_controlled_by_a_separate_motor_and_the_thumb_by_two_motors_this_makes_it_possible_to_perform_freely_adjustable_gestures_and_to_use_the_grip_for_different_objects_and_actions_with_them" = "The hand has 6 independent degrees of freedom - which means that each finger is controlled by a separate motor and the thumb by two motors. This makes it possible to perform freely adjustable gestures and to use the grip for different objects and actions with them.";
"the_prostheses_can_memorize_8_different_gestures_the_first_gesture_in_the_prostheses_is_set_by_default_the_fist_the_other_gestures_can_be_set_individually_according_to_your_wishes_you_can_switch_and_customize_the_gestures_through_the_mobile_app_under_the_gesture_settings_tab" = "The prostheses can memorize 8 different gestures. The first gesture in the prostheses is set by default - the fist, the other gestures can be set individually according to your wishes. You can switch and customize the gestures through the mobile app, under the «gesture settings» tab.";
"you_can_find_out_more_about_working_with_gestures_by_going_to_the_setting_gestures_section_of_the_instructions" = "You can find out more about working with gestures by going to the «setting gestures» section of the instructions.";
"the_sensitivity_determines_how_much_muscle_tension_is_required_for_the_sensor_to_read_the_signal_decrease_the_sensitivity_if_there_is_a_lot_of_background_noise_and_increase_it_if_you_have_to_strain_the_muscle_too_much_when_controlling_the_prostheses" = "The sensitivity determines how much muscle tension is required for the sensor to read the signal. Decrease the sensitivity if there is a lot of background noise and increase it if you have to strain the muscle too much when controlling the prostheses.";
"service_warranty" = "Service & Warranty";
"the_prostheses_is_controlled_with_emg_sensors_by_configuring_two_indicators_sensitivity_and_threshold" = "The prostheses is controlled with EMG sensors by configuring two indicators - sensitivity and threshold.";
"each_sensor_has_its_own_color" = "Each sensor has its own color:";
"closing_sensor" = "Closing sensor";
"opening_sensor" = "Opening sensor";
"what_is_sensitivity_responsible_for" = "What is sensitivity responsible for?";
"by_dragging_these_sliders_you_can_change_the_sensitivity_levels_of_the_sensors" = "By dragging these sliders, you can change the sensitivity levels of the sensors.";
"what_is_the_threshold_responsible_for" = "What is the threshold responsible for?";
"in_order_for_the_prostheses_to_open_or_close_the_signal_from_the_sensor_must_cross_a_threshold_but_this_will_only_happen_if_the_signals_from_the_sensors_do_not_cross_their_thresholds_at_the_same_time_as_each_other" = "In order for the prostheses to open or close, the signal from the sensor must cross a threshold. But, this will only happen if the signals from the sensors do not cross their thresholds at the same time as each other.";
"the_threshold_levels_can_be_changed_by_moving_these_sliders_up_and_down" = "The threshold levels can be changed by moving these sliders up and down.";
"how_to_set_it_up_correctly" = "How to set it up correctly?";
"stretch_the_flexor_extensor_muscles_several_times_in_sequence_observing_the_signals_from_the_sensors_on_the_graph" = "Stretch the flexor/extensor muscles several times in sequence, observing the signals from the sensors on the graph.";
"important_the_signals_must_not_overlap" = "Important: The signals must not overlap";
"signals_without_overlap" = "Signals without overlap:";
"overlapping_signals" = "Overlapping signals:";
"when_performing_there_are_3_possible_types_of_situations_observed_on_the_graphs_before_changing_the_sensor_sensitivity_levels_you_must_understand_what_kind_of_situation_you_are_observing" = "When performing, there are 3 possible types of situations observed on the graphs. Before changing the sensor sensitivity levels, you must understand what kind of situation you are observing.";
"when_one_muscle_strains_a_signal_from_the_second_muscle_appears" = "When one muscle strains, a signal from the second muscle appears";
"useful_signal_from_the_opening_sensor_and_parasitic_signal_from_the_closing_sensor" = "Useful signal from the opening sensor and parasitic signal from the closing sensor";
"how_to_fix_it" = "How to fix it?";
"reduce_to_at_least_five_units_the_sensitivity_of_the_sensor_whose_signal_is_parasitic_for_example_when_trying_to_achieve_an_open_signal_a_parasitic_signal_from_a_close_sensor_would_be_parasitic_until_its_level_is_consistently_below_50" = "Reduce to at least five units the sensitivity of the sensor whose signal is parasitic (for example, when trying to achieve an open signal, a parasitic signal from a close sensor would be parasitic) until its level is consistently below 50.";
"the_signal_from_one_or_both_muscles_is_not_visible_on_the_graphs" = "The signal from one or both muscles is not visible on the graphs";
"increase_the_sensitivity_of_the_sensor_whose_signal_is_not_visible_on_the_graph" = "Increase the sensitivity of the sensor whose signal is not visible on the graph.";
"the_signal_from_both_muscles_is_clear_of_interference_and_well_separated" = "The signal from both muscles is clear of interference and well separated";
"in_this_case_it_is_not_necessary_to_change_the_sensitivity_settings_of_the_sensors_the_sensors_are_set_correctly" = "In this case it is not necessary to change the sensitivity settings of the sensors, the sensors are set correctly.";
"important_do_not_charge_the_prostheses_on_yourself" = "Important: Do not charge the prostheses on yourself";
"the_prostheses_will_not_turn_on_until_charging_is_complete_to_charge_the_prostheses_plug_the_type_c_cable_into_the_jack_on_the_button_the_type_c_cable_must_be_powered_by_a_usb_charger_with_a_voltage_output_of_5v_and_a_current_output_of_2a" = "The prostheses will not turn on until charging is complete. To charge the prostheses, plug the TYPE-C cable into the jack on the button. The TYPE-C cable must be powered by a USB charger with a voltage output of 5V and a current output of 2A.";
"the_prostheses_should_be_recharged_at_least_once_every_2_months" = "The prostheses should be recharged at least once every 2 months.";
"charge_level" = "Charge level";
"the_battery_status_is_displayed_on_the_power_button" = "The battery status is displayed on the power button:";
"while_charging" = "While charging";
"charge_level_100_30" = "Charge level 100% - 30%";
"charge_level_30_5" = "Charge level 30% - 5%";
"charge_level_is_less_than_5" = "Charge level is less than 5%";
"check_the_technical_condition_of_your_prostheses_at_regular_intervals_if_you_find_faults_cracks_or_other_malfunctions_contact_the_service_center_or_your_dentist" = "Check the technical condition of your prostheses at regular intervals. If you find faults, cracks or other malfunctions, contact the service center or your dentist.";
"regular_maintenance_of_the_prostheses_is_required_refer_to_service_and_warranty_for_service_intervals" = "Regular maintenance of the prostheses is required. Refer to «Service and Warranty» for service intervals.";
"it_is_recommended_to_clean_the_arm_prostheses_regularly_use_a_squeezed_cotton_swab_soaked_in_3_hydrogen_peroxide_solution_or_moist_alcohol_wipes_for_this_purpose" = "It is recommended to clean the arm prostheses regularly. Use a squeezed cotton swab soaked in 3% hydrogen peroxide solution or moist alcohol wipes for this purpose.";
"do_not_use_aggressive_detergents" = "Do not use aggressive detergents.";
"if_you_have_a_cosmetic_shell_installed_check_it_regularly_for_through_damage_try_to_avoid_contact_with_sharp_or_pointed_objects_if_the_cosmetic_shell_needs_to_be_replaced_please_contact_your_prosthetic_company" = "If you have a cosmetic shell installed, check it regularly for through damage. Try to avoid contact with sharp or pointed objects. If the cosmetic shell needs to be replaced, please contact your prosthetic company.";
"important_do_not_try_to_repair_your_prosthetic_arm_yourself_it_may_cause_more_serious_damage_and_void_your_warranty" = "Important: Do not try to repair your prosthetic arm yourself, it may cause more serious damage and void your warranty.";
"service" = "Service";
"the_product_is_sold_in_accordance_with_federal_law_2300_1_of_february_7_1992_on_protection_of_consumer_rights" = "The product is sold in accordance with Federal Law №2300-1 of February 7, 1992 «On Protection of Consumer Rights».";
"when_you_contact_the_service_department_an_examination_is_performed_to_determine_if_there_is_a_warranty_claim_any_repair_or_maintenance_is_performed_by_a_certified_service_center_self_repair_is_not_allowed" = "When you contact the service department, an examination is performed to determine if there is a warranty claim. Any repair or maintenance is performed by a certified service center. Self-repair is not allowed.";
"preventive_maintenance_should_be_performed_every_6_months_or_every_50_000_cycles_whichever_comes_first" = "Preventive maintenance should be performed every 6 months or every 50,000 cycles, whichever comes first.";
"the_warranty_covers_any_defects_in_materials_or_workmanship_under_normal_use_during_the_warranty_period" = "The warranty covers any defects in materials or workmanship under normal use during the warranty period.";
"the_warranty_period_is_2_years_and_is_calculated_from_the_beginning_of_exploitation" = "The warranty period is 2 years and is calculated from the beginning of exploitation.";
"the_start_date_of_use_is_the_date_the_prostheses_is_handed_over_to_the_user" = "The start date of use is the date the prostheses is handed over to the user.";
"the_prosthetic_arm_is_accepted_under_warranty_only_together_with_this_manual" = "The prosthetic arm is accepted under warranty only together with this manual.";
"the_warranty_does_not_apply_to" = "The warranty does not apply to:";
"stem_sleeve_if_not_included_in_the_package" = "Stem sleeve (If not included in the package)";
"charger" = "Charger";
"warning_the_warranty_does_not_apply_in_the_following_cases" = "WARNING The warranty does not apply in the following cases:";
"violations_of_storage_and_operating_conditions_specified_in_this_passport_and_operating_manual" = "Violations of storage and operating conditions specified in this passport and operating manual.";
"the_presence_of_traces_of_unauthorized_by_the_manufacturer_disassembly_of_the_product_violation_of_the_integrity_of_the_product_and_or_direct_changes_in_the_equipment_of_the_product_without_the_consent_of_the_manufacturer" = "The presence of traces of unauthorized by the manufacturer disassembly of the product, violation of the integrity of the product, and/or direct changes in the equipment of the product without the consent of the manufacturer.";
"violations_of_the_integrity_of_protective_seals_and_or_indicator_varnish_coatings" = "Violations of the integrity of protective seals and/or indicator varnish coatings.";
"failure_to_complete_routine_maintenance_in_a_timely_manner" = "Failure to complete routine maintenance in a timely manner.";
"the_presence_of_traces_of_exposure_to_corrosive_substances" = "The presence of traces of exposure to corrosive substances.";
"presence_of_traces_of_damage_to_the_product_by_the_user_and_or_third_parties_chips_dents_falling_from_a_height_of_more_than_1_m_on_a_hard_surface_etc" = "Presence of traces of damage to the product by the user and/or third parties (chips, dents, falling from a height of more than 1 m on a hard surface, etc.).";
"any_damage_caused_by_foreign_particles_and_water_entering_the_hand_module_the_sensor_or_the_battery_pack" = "Any damage caused by foreign particles and water entering the hand module, the sensor, or the battery pack.";
"the_presence_of_damage_caused_by_fire_natural_disasters_and_other_force_majeure_circumstances" = "The presence of damage caused by fire, natural disasters and other force measure circumstances.";
"self_detaching_the_hand_module_from_the_elbow_module" = "Self-detaching the hand module from the elbow module.";
"not_allowed" = "Not allowed:";
"connect_the_product_to_damaged_electrical_power_or_source_not_specified_by_the_manufacturer" = "Connect the product to damaged electrical power or source not specified by the manufacturer.";
"charge_the_user_s_prostheses" = "Charge the user's prostheses.";
"if_the_prostheses_has_not_been_charged_for_more_than_2_months_it_is_necessary_to_contact_the_service" = "If the prostheses has not been charged for more than 2 months, it is necessary to contact the service.";
"use_a_defective_denture" = "Use a defective denture.";
"use_the_product_to_operate_vehicles_dangerous_machinery_and_weapons" = "Use the product to operate vehicles, dangerous machinery and weapons.";
"use_the_product_to_carry_dangerous_loads_that_can_cause_damage_if_dropped_pressured_or_ignited" = "Use the product to carry dangerous loads that can cause damage if dropped, pressured or ignited.";
"do_not_use_the_product_for_purposes_other_than_those_for_which_it_is_intended_or_in_cases_that_could_cause_any_damage_to_the_prostheses" = "Do not use the product for purposes other than those for which it is intended or in cases that could cause any damage to the prostheses.";
"immersion_in_water_and_washing_the_prostheses_under_water_jets_is_prohibited_the_prostheses_is_ip_54_which_means_it_can_be_used_in_the_rain" = "Immersion in water and washing the prostheses under water jets is prohibited. The prostheses is IP 54, which means it can be used in the rain.";
"disassemble_and_repair_the_product_yourself" = "Disassemble and repair the product yourself.";
"is_the_prostheses_calibrated" = "Is the prostheses calibrated?";
"by_default_the_prostheses_comes_calibrated_and_with_the_first_gesture_set_you_can_check_if_the_denture_is_correctly_calibrated_by_pressing_the_open_close_buttons" = "By default, the prostheses comes calibrated and with the first gesture set. You can check if the denture is correctly calibrated by pressing the «open»/«close» buttons";
"when_the_first_gesture_in_the_gesture_menu_is_selected" = "when the first gesture in the gesture menu is selected.";
"if_the_prosthetic_hand_closes_into_a_fist_then_it_is_calibrated_correctly_if_it_does_not_close_in_the_fist_or_does_not_move_you_should_contact_the_service_center_for_consultation" = "If the prosthetic hand closes into a fist, then it is calibrated correctly. If it does not close in the fist or does not move, you should contact the service center for consultation.";
"configuring_your_first_personal_gesture" = "Configuring your first personal gesture";
"after_checking_that_the_calibration_and_the_first_gesture_are_working_you_can_start_setting_up_your_own_gestures_to_do_this_click_on_the_gear_button_next_to_the_name_of_the_gesture_you_want_to_adjust" = "After checking that the calibration and the first gesture are working, you can start setting up your own gestures. To do this, click on the gear button next to the name of the gesture you want to adjust.";
"this_will_open_a_window_in_which_you_will_see_a_3d_model_of_the_prosthetic_hand_in_the_open_state_of_the_customizable_gesture_change_the_grip_by_tapping_any_finger_and_then_swiping_up_or_down_on_the_screen" = "This will open a window in which you will see a 3D model of the prosthetic hand in the open state of the customizable gesture. Change the grip by tapping any finger and then swiping up or down on the screen.";
"the_length_of_the_swipe_adjusts_the_angle_of_the_finger_bend" = "The length of the swipe adjusts the angle of the finger bend.";
"when_adjusting_the_forefinger_middle_finger_ring_finger_and_pinky_finger_only_the_swipe_in_the_vertical_direction_is_taken_into_consideration_and_two_axes_are_used_simultaneously_to_adjust_the_position_of_the_thumb" = "When adjusting the forefinger, middle finger, ring finger, and pinky finger, only the swipe in the vertical direction is taken into consideration. And two axes are used simultaneously to adjust the position of the thumb.";
"the_vertical_axis_control_the_angle_of_flexion_of_the_thumb_itself_and_the_horizontal_axis_control_the_angle_of_rotation_of_the_thumb" = "The vertical axis control the angle of flexion of the thumb itself, and the horizontal axis control the angle of rotation of the thumb.";
"swipes_outside_the_hand_rotate_it_in_space" = "Swipes outside the hand rotate it in space.";
"at_the_bottom_of_the_screen_there_is_a_button_to_switch_the_grip_of_the_customizable_gesture" = "At the bottom of the screen there is a button to switch the grip of the customizable gesture.";
"if_the_open_and_closed_positions_of_the_prosthetic_fingers_do_not_match_after_pressing_it_you_will_see_an_animation_of_the_grip_that_will_be_applied_when_using_this_gesture" = "If the open and closed positions of the prosthetic fingers do not match, after pressing it you will see an animation of the grip that will be applied when using this gesture.";
"in_real_life_the_prosthetic_will_perform_the_same_finger_movements_as_the_model_on_the_smartphone_screen" = "In real life, the prosthetic will perform the same finger movements as the model on the smartphone screen.";
"by_moving_the_model_s_fingers_when_the_gesture_state_button_is_in_the_closed_state_position_you_will_configure_the_closed_position_of_the_gesture" = "By moving the model's fingers when the gesture state button is in the «closed state» position you will configure the closed position of the gesture.";
"you_can_also_enter_your_own_name_for_the_gesture_by_clicking_on_the_pencil_icon_next_to_the_default_gesture_name" = "You can also enter your own name for the gesture by clicking on the pencil icon next to the default gesture name.";
"saving_settings_and_using_gestures" = "Saving settings and using gestures";
"after_reaching_the_desired_open_and_closed_position_of_the_gesture_you_must_press_the_save_button_located_at_the_bottom_of_the_screen" = "After reaching the desired open and closed position of the gesture, you must press the «save» button located at the bottom of the screen.";
"to_use_the_configured_gesture_press_the_button_corresponding_to_the_gesture_it_will_become_white_different_from_all_other_buttons" = "To use the configured gesture, press the button corresponding to the gesture. It will become white (different from all other buttons).";
"view_interactive_instruction" = "View interactive instruction";
"shutdown_currents_per_finger" = "Shutdown currents per finger";
"with_these_sliders_you_can_adjust_the_maximum_pressure_of_each_finger_after_encountering_an_objet_in_its_path" = "With these sliders, you can adjust the maximum pressure of each finger after encountering an objet in its path.";
"swapping_the_open_and_close_buttons" = "Swapping the open and close buttons";
"with_this_switch_you_can_change_the_functionality_of_the_open_and_close_buttons" = "With this switch you can change the functionality of the open and close buttons.";
"single_channel_function_control" = "Single channel function control";
"when_single_channel_mode_is_activated_the_prostheses_is_controlled_by_a_single_sensor" = "When single-channel mode is activated, the prostheses is controlled by a single sensor.";
"lock_function_control" = "Lock function control";
"the_activation_of_the_switch_activates_the_function_of_locking_the_prostheses_with_the_sensors" = "The activation of the switch activates the function of locking the prostheses with the sensors.";
"minimum_time_to_activate_or_deactivate_the_lock" = "Minimum time to activate or deactivate the lock";
"the_blocking_is_activated_if_the_signals_to_the_opening_and_closing_sensors_are_applied_simultaneously_longer_than_the_activation_time_of_the_function" = "The blocking is activated if the signals to the opening and closing sensors are applied simultaneously longer than the activation time of the function.";
"sensor_gesture_switching_function_control" = "Sensor gesture switching function control";
"activating_this_function_makes_it_possible_to_switch_gestures_by_means_of_signals_given_to_the_sensors" = "Activating this function makes it possible to switch gestures by means of signals given to the sensors.";
"slider_to_set_the_timing_of_the_sensor_gesture_switching_function" = "Slider to set the timing of the sensor gesture switching function";
"the_slider_adjusts_the_minimum_time_that_the_opening_sensor_signal_must_be_above_the_threshold_level_when_the_prostheses_reaches_the_open_state" = "The slider adjusts the minimum time that the opening sensor signal must be above the threshold level when the prostheses reaches the open state.";
"view_for_read_write_the_serial_number_of_the_prosthetic_serial" = "View to read/set prosthetic telemetry serial number";
"functionality_is_under_development" = "The functionality is in development.";
"the_choice_of_trauma_side_switch" = "The choice of trauma side switch";
"it_is_necessary_to_select_the_side_of_the_prostheses_for_its_successful_calibration_as_well_as_for_the_correct_display_of_the_model_in_the_gesture_configurator" = "It is necessary to select the side of the prostheses for its successful calibration, as well as for the correct display of the model in the gesture configurator.";
"switch_activates_the_menu_function_to_change_the_start_delays_of_the_fingers" = "Switch activates the menu function to change the start delays of the fingers";
"a_button_appears_in_the_gesture_configurator_that_allows_you_to_change_the_start_delay_timings_of_the_fingers_of_the_grip_being_set" = "A button appears in the Gesture Configurator that allows you to change the start delay timings of the fingers of the grip being set.";
"switch_to_deactivate_the_smart_connection_function" = "Switch to deactivate the «smart connection» function";
"if_the_function_is_active_and_it_is_active_by_default_then_when_you_run_the_application_again_the_scanning_screen_analyzes_all_the_scanned_devices_and_when_the_last_device_to_which_the_connection_was_made_is_found_it_automatically_connects_to_it_this_makes_the_connection_process_faster_about_a_second_and_easier_for_most_users_those_with_a_single_prostheses_if_the_function_is_disabled_the_user_is_on_the_device_selection_screen_until_a_specific_device_is_selected_the_feature_should_be_turned_off_for_couples_because_it_is_important_for_them_to_choose_which_prostheses_to_connect_to_on_their_own_every_time_it_is_also_unnecessary_for_those_who_frequently_connect_to_different_devices" = "If the function is active, and it is active «by default», then when you run the application again, the scanning screen analyzes all the scanned devices and when the last device to which the connection was made is found, it automatically connects to it. This makes the connection process faster (about a second) and easier for most users (those with a single prostheses). If the function is disabled, the user is on the device selection screen until a specific device is selected. The feature should be turned off for couples because it is important for them to choose which prostheses to connect to on their own every time. It is also unnecessary for those who frequently connect to different devices.";
"reset_button_to_factory_default_settings" = "Reset button to factory default settings";
"after_pressing_it_all_the_parameters_of_the_prostheses_return_to_the_by_default_state" = "After pressing it, all the parameters of the prostheses return to the «by default» state.";
"button_to_start_calibration" = "Button to start calibration";
"pressing_this_button_starts_the_calibration_process_of_the_prostheses" = "Pressing this button starts the calibration process of the prostheses.";
"calibration_status_help" = "Calibration status";
"pressing_this_button_allows_you_to_find_out_about_errors_that_occurred_during_calibration" = "Pressing this button allows you to find out about errors that occurred during calibration.";
"debugging_screen" = "Debugging screen";
"clicking_this_button_opens_a_screen_that_displays_a_brush_model_with_finger_positions_that_correspond_to_brush_encoder_values" = "Clicking this button opens a screen that displays a brush model with finger positions that correspond to brush encoder values.";
"connection_test" = "Connection test";
"pressing_this_button_starts_the_bluetooth_connection_test_an_array_of_data_is_transmitted_in_two_directions_and_the_percentage_of_connection_quality_is_calculated_by_the_number_of_transmission_errors_the_closer_to_100_the_faster_the_commands_will_be_transmitted_from_the_application_to_the_prostheses" = "Pressing this button starts the bluetooth-connection test. An array of data is transmitted in two directions, and the percentage of connection quality is calculated by the number of transmission errors. The closer to 100%, the faster the commands will be transmitted from the application to the prostheses.";
"application_version" = "Application version";
"the_last_line_in_the_advanced_settings_shows_the_version_of_the_application" = "The last line in the advanced settings shows the version of the application.";
"shutdown_current_level" = "Minimum shutdown current level";
"you_can_use_this_slider_to_change_the_final_compression_force_of_the_prostheses_on_something_before_it_stops" = "With this slider you can change the minimum force that the prosthesis can exert on an object before stopping. This value is set as low as possible so that the prosthesis moves without stopping between the end positions.";
"application_version_and_size" = "Application version and size";
"the_last_line_in_the_advanced_settings_shows_the_version_of_the_application_and_the_selected_size_of_the_prostheses_the_size_of_the_prostheses_affects_the_limitation_of_the_maximum_current_so_it_should_be_chosen_consciously_otherwise_there_is_a_risk_of_setting_a_cut_off_current_that_will_damage_the_prostheses_the_maximum_cut_off_current_of_the_xl_size_prostheses_will_kill_the_s_size_prostheses_the_cut_off_simply_doesn_t_work_because_less_powerful_motors_are_used_so_they_get_hot_and_fail_but_if_you_tell_the_s_size_prostheses_that_it_is_an_s_size_the_maximum_cut_off_current_will_match_that_size_and_not_allow_the_prostheses_to_break" = "The last line in the advanced settings shows the version of the application. And the selected size of the prostheses. The size of the prostheses affects the limitation of the maximum current, so it should be chosen consciously. Otherwise there is a risk of setting a cut-off current that will damage the prostheses. (the maximum cut-off current of the XL size prostheses will kill the S size prostheses (the cut-off simply doesn't work because less powerful motors are used, so they get hot and fail), but if you tell the S size prostheses that it is an S size, the maximum cut-off current will match that size and not allow the prostheses to break)";
"start_game" = "start game";
"toggle_gesture_cluster" = "toggle gesture cluster";
"the_number_of_gestures_per_cycle_should_not_exceed_4" = "The number of gestures per cycle should not exceed 4";
"the_starting_gesture_of_the_cycle_was_changed_to" = "The starting gesture of the cycle was changed to";
"the_ending_gesture_of_the_cycle_was_changed_to" = "The ending gesture of the cycle was changed to";
"emg_mode" = "EMG sensors mode";
"configuring_a_gesture_group_for_sensor_switching" = "Configuring a gesture group for sensor switching";
"to_make_the_rotation_group_setting_available_you_must_activate_the_gesture_switching_function_of_the_sensors" = "To make the rotation group setting available, you must activate the gesture switching function of the sensors.";
"by_pressing_these_buttons_from_the_drop_down_list_you_can_select_the_numbers_of_the_start_and_end_gesture_in_the_rotation_group_respectively" = "By pressing these buttons from the drop-down list you can select the numbers of the start and end gesture in the rotation group respectively.";
"in_this_example_the_first_gesture_is_selected_as_the_starting_gesture_and_the_fourth_as_the_ending_gesture_the_maximum_number_of_gestures_in_a_group_is_4_if_the_start_gesture_is_set_larger_than_the_end_gesture_the_system_will_swap_them_if_a_range_larger_than_the_allowed_range_is_selected_the_system_will_reduce_it_to_4" = "In this example, the first gesture is selected as the starting gesture and the fourth as the ending gesture. If the start gesture is set larger than the end gesture, the system will swap them.";
"arrow_icons_will_appear_on_the_buttons_in_the_rotation_group" = "Arrow icons will appear on the buttons in the rotation group.";
"the_switching_is_performed_according_to_the_following_logic_the_user_opens_the_prosthesis_as_far_as_it_will_go_and_triggers_the_opening_signal_again_when_the_signal_lasts_longer_than_the_time_set_in_the_peak_length_parameter_the_gesture_is_switched" = "The switching is performed according to the following logic. The user opens the prosthesis as far as it will go and triggers the opening signal again. When the signal lasts longer than the time set in the «peak length» parameter, the gesture is switched.";
"if_a_gesture_from_outside_the_rotation_group_was_set_the_first_gesture_of_the_rotation_group_will_be_activated_if_a_gesture_that_is_part_of_a_group_has_been_set_the_next_gesture_of_the_group_will_be_switched_to_the_next_gesture_of_the_group_when_the_final_gesture_of_the_group_is_reached_the_first_gesture_of_the_group_will_be_enabled_again_the_user_can_select_any_gesture_from_the_available_gestures_by_tapping_on_the_screen_regardless_of_how_the_rotation_group_is_set_up" = "If a gesture from outside the rotation group was set, the first gesture of the rotation group will be activated. If a gesture that is part of a group has been set, the next gesture of the group will be switched to the next gesture of the group. When the final gesture of the group is reached, the first gesture of the group will be enabled again. The user can select any gesture from the available gestures by tapping on the screen, regardless of how the rotation group is set up.";
"emg_sensor_mode_selection" = "EMG sensor mode selection";
"normal_sensitive_mode_reduces_false_signals_but_is_slower_to_respond_to_muscle_tension_while_increased_sensitive_mode_responds_faster_to_muscle_signals_with_less_noise_immunity" = "Normal sensitive mode reduces false signals but is slower to respond to muscle tension, while «increased sensitive» mode responds faster to muscle signals with less noise immunity.";
"factory_reset" = "Factory reset";
"do_you_really_want_to_soft_reset_your_prosthesis_to_factory_settings" = "Do you really want to reset your prosthetic settings back to factory defaults? (gesture states and prosthetic name will not be changed)";
"do_you_really_want_to_hard_reset_your_prosthesis_to_factory_settings" = "Do you really want to reset all your prosthetic settings back to factory defaults?";
"do_you_really_want_to_gesture_reset_your_prosthesis_to_factory_settings" = "Do you really want to reset all your gestures back to factory defaults?";
"calibration_of_the_prosthesis" = "Calibration of the prosthesis";
"calibration_will_take_approximately_15_seconds_do_you_really_want_to_continue" = "Calibration will take approximately 15 seconds. Do you really want to continue?";
"setting_the_serial_number_of_the_prosthesis" = "Setting the serial number of the prosthesis";
"a_reboot_of_the_prosthesis_will_be_required_for_the_changes_to_take_effect_you_will_be_redirected_to_the_device_scan_screen_would_you_like_to_continue" = "You will need to reset the prosthesis yourself for the changes to take effect after sending the new serial number. Do you want to send a new serial number?";
"view_to_record_the_serial_number_of_the_prosthesis" = "View to record the serial number of the prosthesis";
"allows_you_to_add_a_16_character_suffix_to_be_added_to_the_prosthesis_name_after_the_prosthesis_type_fest_x" = "Allows you to assign a serial number to the prosthesis.";
"enter_settings_pin" = "Enter pin code";
"number_of_active_gestures" = "number of active gestures";
"autocalibration" = "autocalibration";
"prosthesis_mode" = "prosthesis mode";
"number_of_cycles" = "number of cycles";
"blocking_secret_settings" = "blocking secret settings";
"neurointerface" = "Neurointerface";
"full_reset" = "full reset";
"soft_factory_reset" = "Soft factory reset";
"gestures_reset" = "Gestures reset";
"gesture_type" = "gesture type";
"general" = "General";
"customer_service" = "Customer service";
"prosthesis_information" = "Prosthesis information";
"driver_version" = "Driver version";
"software_information" = "Software information";
"bms_version" = "Bms version";
"sensors_version" = "Sensors version";
"date_of_receipt_of_prosthesis" = "Date of receipt of prosthesis";
"warranty_expiration_date" = "Warranty expiration date";
"your_manager" = "Your manager";
"prosthesis_status" = "Prosthesis status";
"prosthesis_model" = "Prosthesis model";
"prosthesis_size" = "Prosthesis size";
"hand_side_2" = "Hand side";
"rotator_type" = "Rotator type";
"touchscreen_finger_pads" = "Touchscreen finger pads";
"battery_type" = "Battery type";
"application_pin_code" = "application pin code";
"enter_new_pin" = "Enter new PIN";
"done" = "Done";
"congratulations" = "Congratulations!!!";
"do_you_want_to_continue_playing_in_infinite_mode_and_battle_for_the_lead_in_the_points_record_table" = "Do you want to continue playing in infinite mode and battle for the lead in the points record table?";
"grip_force" = "grip force";
"collection_of_gestures" = "Collection";
"rotation_group" = "Rotation group";
"fist" = "Fist";
"spr_gestures" = "SPPPR gestures";
"grip_the_ball" = "Grip the ball";
"that_rocks" = "That rocks";
"title_gestures_learned" = "Gestures learned\n";
"neutral_position" = "Neutral position";
"thumb_finger" = "Thumb Finger";
"clenching_fist" = "Clenching into a fist";
"palm_opening" = "Palm opening";
"palm_closing" = "Closing palm";
"ok_pinch" = "Ok/Pinch Gesture";
"pistol_pointer_gesture" = "Pistol/Pointer Gesture";
"flexion" = "Flexion";
"extension" = "Extension";
"adduction" = "Adduction";
"abduction" = "Abduction";
"pronation" = "Pronation";
"supination" = "Supination";
"gesture_used" = "Gesture used";
"control_gestures" = "Control Gestures";
"select_learned_gestures" = "Select learned gestures";
"assign_gesture" = "Assign a gesture";
"neutral" = "Neutral";
"annotation_main_text" = "Here you can select gestures recorded during training, as well as attach your own gestures to them.";
"toast_notification_gesture_in_use" = "This gesture is already in use. Choose another.";
"training" = "Training";
"you_can_now_customize_your_gestures" = "You can now customize your gestures";
"training_completed" = "Training completed";
"prepare_to_perform_the_gesture_in" = "prepare to perform the gesture in :";
"are_you_sure_you_want_to_start_training" = "Are you sure you want to start training?";
"are_you_sure_you_want_to_cancel_your_training" = "Are you sure you want to cancel your training?";
"start_training" = "Start training";
"cancel_training" = "Cancel training";
"remove_the_gesture_from_the_group" = "Remove the gesture from the group?";
"delete" = "Delete";
"the_that_rocks_gesture_will_remain_available_in_the_gesture_collection_but_will_be_removed_from_the_rotation_group" = "The %s gesture will remain available in the gesture collection, but will be removed from the rotation group.";
"add_gestures_to_the_group" = "Add gestures to the rotation group";
"follow_the_gestures_on_the_screen_and_keep_track_of_the_time" = "Follow the gestures on the screen and keep track of the time";
"let_s_start_training_spr" = "Let's start training SPPPR";
"spppr_is_learning" = "SPPPR is learning";
"spppr_is_saving" = "SPPPR is saving";
"base_line" = "Baseline";
"no_saved_files" = "No saved files";
"select_training_file" = "Select training file";
"show_files" = "Show Files";
"model_training_in_progress_please_wait" = "Model training in progress, please wait...";
"wait_until_the_model_file_is_created" = "Wait until the model file is created";
"the_model_file_is_saved_to_the_device_memory_please_wait" = "The model file is saved to the device memory, please wait...";
"file_is_being_downloaded" = "File is being downloaded";
"are_you_sure_you_want_to_start_downloading_the_file" = "Are you sure you want to start downloading the file?";
"bluetooth_connection_is_disabled" = "Bluetooth connection is disabled";
"there_is_no_bluetooth_connection_check_the_connection" = "There is no Bluetooth connection. Check the connection.";
"gesture_point" = "Pointing";
"gesture_pinch" = "Pinch";
"gesture_fist_thumb_over" = "Fist 2";
"gesture_key" = "Gesture Key";
"gesture_rock" = "Goat";
"gesture_twizzers" = "Tweezers";
"gesture_cupholder" = "Cup Grip";
"gesture_half_grab" = "Half Grab";
"gesture_ok" = "OK";
"gesture_thumb_up" = "Thumbs Up";
"gesture_middle_finger" = "Middle Finger";
"gesture_double_point" = "Pistol";
"gesture_call_me" = "Call Me";
"gesture_natural_position" = "Natural Position";
"pwle_calibrate" = "calibrate";
"pwle_reset" = "reset";
"pwle_control_settings" = "control settings";
"pwle_open_close_threshold" = "open close threshold";
"pwle_select_gesture" = "select gesture";
"pwle_select_profile" = "select profile";
"pwle_global_force" = "global force";
"pwle_plot" = "plot";
"pwle_omg_learning" = "omg learning";
"prepare_to_perform_the_gesture" = "Prepare to perform the gesture";
"rest_before_the_next_gesture" = "Rest before the next gesture";
"perform_gesture" = "Perform a gesture: %1$s";
"next_gesture" = "Next gesture: %1$s";
"wait_until_the_end" = "Wait until the end";
"you_can_relax_your_hand" = "You can relax your hand";
"remaining_gestures_count" = "Gestures left: %1$d";
"remaining_gestures_count_placeholder" = "Gestures left: 0";
"loading_error" = "Loading error";
"the_file_was_not_successfully_downloaded" = "The file was not successfully downloaded to the prosthesis. Please try again.";
"data_collection" = "Data collection";
"active_gesture_is" = "Active gesture: %1$s";
"pwle_unknow" = "unknow";
"prosthetic_settings" = "Prosthetic settings";
"mobile_settings" = "Mobile Settings";
"auto_login" = "Auto login";
"choose_the_size_of_the_prostheses" = "…";